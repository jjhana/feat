package org.purl.net.jh.tagset.edit;

import org.purl.jh.util.gui.ListTable;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import static java.util.Arrays.asList;
import java.util.List;
import java.util.regex.Pattern;
import org.purl.jh.util.col.Cols;

/**
 *
 * @author jirka
 */
public class TagsetPanel extends javax.swing.JPanel {
//    final List<Tagset<?>> tagsets; // = new ArrayList<Tagset>();
//
//    /**
//     * Creates new form TagsetPanel
//     * @param aTagsets tagsets to display, the list (and the objects in it) is directly modified.
//     */
//    public TagsetPanel(final List<Tagset<?>> aTagsets) {
//        //tagsets.addAll(aTagsets);
//        tagsets = aTagsets;
//        initComponents();
//
//        getTable().addItemListener(new XItemListener());
//    }
//
    private ListTable</*Tagset<?>*/?> createTable() {
        return null;
//        final ListTable.Printer<Tagset<?>> printer = new ListTable.Printer<Tagset<?>>() {
//            @Override
//            public List<String> print(final Tagset aTs) {
//                return asList(
//                    aTs.getId(),
//                    "descr - todo",
//                    aTs.getType(),
//                    aTs.getLg());
//            }
//        };
//
//        return new ListTable<Tagset<?>>(
//                asList("id", "Description", "type", "language"),
//                asList(true, true, false, true),
//                printer,  tagsets);
    }
//
//
//    private ListTable<Tagset> getTable() {
//        return (ListTable<Tagset>) tagsetsTbl;
//    }
//
//
//    class XItemListener implements ItemListener {
//        @Override
//        public void itemStateChanged(ItemEvent e) {
//            final Tagset ts = getTable().getCurItem();
//            if (e.getStateChange() == ItemEvent.DESELECTED) {
//                if (ts.isAtomic()) {
//                    final List<String> tags = ts.getTags();
//                    tags.clear();
//
//                    List<String> lines = org.purl.jh.util.str.Strings.splitL(definitionText.getText(), Pattern.compile("\\n") );
//                    for (String line : lines) {
//                        String tag = line.trim();
//                        if (!tag.isEmpty()) tags.add(tag);
//                    }
//                }
//            }
//            else if (e.getStateChange() == ItemEvent.SELECTED) {
//                if (ts.isAtomic()) {
//                    definitionText.setEnabled(true);
//                    definitionText.setText( Cols.toStringNl(ts.getTags()) );
//                    tagsetPropertiesTbl = ListTable.createMapTable(ts.getProperties(), "Property", "Value");
//                }
//                else {
//                    definitionText.setEnabled(false);
//                    definitionText.setText("");
//                }
//            }
//        }
//    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        definitionText = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tagsetsTbl = createTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tagsetPropertiesTbl = new javax.swing.JTable();

        newButton.setText(org.openide.util.NbBundle.getMessage(TagsetPanel.class, "TagsetPanel.newButton.text")); // NOI18N
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        definitionText.setColumns(20);
        definitionText.setRows(5);
        jScrollPane3.setViewportView(definitionText);

        jScrollPane1.setViewportView(tagsetsTbl);

        jScrollPane2.setViewportView(tagsetPropertiesTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
//        Tagset<?> tagset = new SimpleAtomicTagset("new-tagset", "some description", null, null);            // TODO add your handling code here:
//        tagset.addAll("?", "tag1", "tag2");
//        tagsets.add(tagset);
//        getTable().tableChanged(null);
    }//GEN-LAST:event_newButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea definitionText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton newButton;
    private javax.swing.JTable tagsetPropertiesTbl;
    private javax.swing.JTable tagsetsTbl;
    // End of variables declaration//GEN-END:variables

}
