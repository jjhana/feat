<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<!--Put your hg.username/hg.password into your nbproject/private/platform-private.properties file -->
<project name="Czesl" basedir=".">
    <description>Builds Feat.</description>
    <import file="nbproject/build-impl.xml"/>

    <target name="echox" depends="-init">
        <echoproperties prefix="nbm"/>
    </target>

    <target name="update-build-nrs">
        <tstamp>
            <format property="TODAY_ISO" pattern="yyyy-MM-dd"/>
        </tstamp>        
        <propertyfile file="branding/core/core.jar/org/netbeans/core/startup/Bundle.properties">
            <entry  key="currentVersion" value="Feat Build ${TODAY_ISO}"/>
        </propertyfile>       
        <propertyfile file="branding/modules/org-netbeans-core-windows.jar/org/netbeans/core/windows/view/ui/Bundle.properties">
            <entry  key="CTL_MainWindow_Title" value="Feat Build ${TODAY_ISO}"/>
            <entry  key="CTL_MainWindow_Title_No_Project" value="Feat Build ${TODAY_ISO}"/>
        </propertyfile>       
    </target>

    <target name="_bbuild" depends="-init,clean,update-build-nrs,prepare-updates,nbms,build-zips "  description="Completely build the app">
        <!-- todo produce dist with jre, usb dist -->
    </target>

    <target name="_bbuild-test-publish" depends="_bbuild,-publish-archive,-publish-test-uc"  description="Completely build the app, archive and publish it to the test UC">
    </target>
    
    <target name="_publish-ofic" depends="-init,-publish-ofic-uc"  description="Publish the app (requires _bbuild first)">
    </target>

    <target name="-publish-archive" depends="-init">
        <property name="build.updates.dir" location="${suite.build.dir}/updates"/>
        <tstamp>
            <format property="TODAY_ISO" pattern="yyyy-MM-dd-HH-mm"/>
        </tstamp>        
        <copy todir="dist.archive/${TODAY_ISO}/updates">
            <fileset dir="${build.updates.dir}"/>
        </copy>
        <copy todir="dist.archive/${TODAY_ISO}">
            <fileset dir="${dist.dir}"/>
        </copy>
        <copy todir="dist.archive/latest">
            <fileset dir="dist.archive/${TODAY_ISO}"/>
        </copy>
    </target>

    <!--Put your hg.username/hg.password into your nbproject/private/platform-private.properties file -->
   <target name="-publish-test-uc" depends="-init">
       <copy todir="../../bitbucket/uc/feat-test">
            <fileset dir="dist.archive/latest/updates"/>
        </copy>
          <exec executable="hg" dir="../../bitbucket">
            <arg value="add"/>
          </exec>
          <echo message="added"/>
          <exec executable="hg" dir="../../bitbucket">
            <arg value="commit"/>
            <arg value="-m"/>
            <arg value="Pushing updates to test feat-test uc"/>
          </exec>
          <echo message="committed"/>
          <exec executable="hg" dir="../../bitbucket">
            <arg value="push"/>
            <arg value="https://${hg.username}:${hg.password}@bitbucket.org/jhana/jhana.bitbucket.org"/>
          </exec>
          <echo message="pushed"/>
   </target>

    <target name="-publish-ofic-uc" depends="-init"  description="Publish the updates to the official UC (requires running _bbuild first)">
        <copy todir="../../bitbucket/uc/feat">
            <fileset dir="../../bitbucket/uc/feat-test"/>
        </copy>
          <exec executable="hg" dir="../../bitbucket">
            <arg value="add"/>
          </exec>
          <echo message="added"/>
          <exec executable="hg" dir="../../bitbucket">
            <arg value="commit"/>
            <arg value="-m"/>
            <arg value="Pushing updates to the official feat uc"/>
          </exec>
          <echo message="committed"/>
          <exec executable="hg" dir="../../bitbucket">
            <arg value="push"/>
            <arg value="https://${hg.username}:${hg.password}@bitbucket.org/jhana/jhana.bitbucket.org"/>
          </exec>
          <echo message="pushed"/>
    </target>


    <target name="build-zips" depends="build-zip,prepare-for-zips,build-usb-zip,build-jre-zip,build-usb-jre-zip"  description="Create zip distributions">
    </target>

    <target name="prepare-for-zips" depends="-init">
        <delete failonerror="false">
            <fileset dir="${suite.build.dir}/for-zips"/>
        </delete>
    </target>

    <target name="build-usb-zip" depends="-init,prepare-for-zips">
        <mkdir dir="${suite.build.dir}/for-zips/usb/feat"/>
        <delete failonerror="false">
            <fileset dir="${suite.build.dir}/for-zips"/>
        </delete>
        <mkdir dir="${suite.build.dir}/for-zips/usb/feat"/>

        <copy todir="${suite.build.dir}/for-zips/usb/feat">
            <fileset dir="dist.prep/for_usb/feat"/>
        </copy>
  
        <unzip src="${dist.dir}/${app.name}.zip" dest="${suite.build.dir}/for-zips/usb/feat"/>
        <!-- we want to overwrite the newer configuration file from the build by our own configuration -->
        <copy file="dist.prep/for_usb/feat.conf" todir="${suite.build.dir}/for-zips/usb/feat/feat/etc" overwrite="true"  />

        <zip destfile="${dist.dir}/${app.name}-usb.zip" >
            <zipfileset dir="${suite.build.dir}/for-zips/usb/feat" prefix="feat"/>
        </zip>     
    </target>
        
    <target name="build-jre-zip" depends="-init,prepare-for-zips" description="todo" >
    </target>

    <target name="build-usb-jre-zip" depends="-init,prepare-for-zips" description="todo">
    </target>

                
    <target name="prepare-updates" depends="-init,prepare-nb_modules">
        <property name="build.updates.dir" location="${suite.build.dir}/updates"/>
        <copy todir="${build.updates.dir}">
            <fileset dir="../nb_modules/build/updates"/>
            <!-- empty modules, that are no longer used (to disable them on computers that were not updated for a long time) -->
            <!--fileset dir="dist.prep/old_nbms"/--> 
            <!-- platform modules -->
            <fileset dir="nb_uc/_uc"/>
        </copy>
    </target>

    <target name="prepare-nb_modules">
        <subant target="clean" antfile="../nb_modules/build.xml" buildpath="../nb_modules"/>
        <subant target="nbms" antfile="../nb_modules/build.xml" buildpath="../nb_modules"/>
    </target>

</project>
